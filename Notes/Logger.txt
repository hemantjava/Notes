

public static final Level TRACE:-
-------------------------------
The TRACE Level designates finer-grained informational events than the DEBUG

public static final Level DEBUG:-
-------------------------------
The DEBUG Level designates fine-grained informational events that are most useful to debug an application.


public static final Level INFO:-
-------------------------------
The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.

public static final Level WARN:-
-------------------------------
The WARN level designates potentially harmful situations.

public static final Level ERROR:-
-------------------------------
The ERROR level designates error events that might still allow the application to continue running.


public static final Level FATAL:-
-------------------------------
The FATAL level designates very severe error events that will presumably lead the application to abort.

public static final Level ALL:-
------------------------------
The ALL has the lowest possible rank and is intended to turn on all logging.


public static final Level OFF:-
-----------------------------
The OFF has the highest possible rank and is intended to turn off logging.

-----------------------------------------------------------------------------
================================SLF4J====================================
------------------------------------------------------------------------------

import org.slf4j.Logger;(interface)
import org.slf4j.LoggerFactory;(class)

private static final Logger logger = LoggerFactory.getLogger(CollegeDao.class);

logger.info("delete({}):{}",id,false);

------------------------------------------------------------------------------
==============================log4j2==========================================

import org.apache.logging.log4j.LogManager;(class)
import org.apache.logging.log4j.Logger;(interface)

private static final Logger LOGGER = LogManager.getLogger(BitCoinController.class.getName());
