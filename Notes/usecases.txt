Use Case Based Problem

Basic

What will be your design in the scenario where 250 MB of memory is available to you and 10 file of 100 MB coming from upstream the requirement is to sort these 10 files and save it in database. Which sorting algorithm will you use?
sort each word in those 10 files in alpha-numeric order.
How will you implement producer/consumer problem where there are ten producers and ten consumers.
Implement producer/consumer problem
Using custom blocking queue, join, semaphore and wait/notify.
Implement Merge Sort, External Merge Sort and Quick Sort. Learn to calculate time, space complexity and use cases of both.
Print Fibonacci series based on provided number.
Implement both recursive and non-recursive approaches. consider using dynamic programming
Sort HashMap by values in descending order using Java 8 Stream APIs.
Write program to find largest and second largest element in an unsorted array.
Program should be scalable enough to find nth largest element.
Implement using Java 8 Stream APIs.
 

 

Advanced

Implement custom thread pool.
Handle exceptions, monitorexecuting threads and implement shutdown mechanism.
Implement custom cyclic brier and custom countdown latch.
Implement Merge Sort using ForkJoin. Learn to calculate time and space complexity.
Design a Custom Concurrent Counter. Don't use AtomicInteger.
Implement custom ReentrantLock.
   Design a generic object pool. Identify which design patterns will be used here.
How do you limit number of objects being created in a pool?
Design an multi-threaded Download Manager which can show the progress of different downloads
Design a custom concurrent HashMap using lock splitting concept.
 

Design

Design a Chess Game. (Share design diagram or class diagram
Design a Call Center.
Imagine you have a call center with three levels of employees: fresher, technical lead (TL), product manager (PM). There can be multiple employees, but only one TL or PM. An incoming telephone call    must be  allocated to a fresher who is free. If a fresher canâ€™t handle the call, he or she must escalate the call to technical lead. If the TL is not free or not able to handle it, then the call should be escalated to PM.         
  3.  Design BookMyShow (Cover booking of a ticket for given city->theater-> movie -> time)

  4.  Design Uber (Cover Caching, logging, mapping between driver to rider, ETA, understand micro service architecture)

  5. Design multi level parking lot (Cover multiple entrance,exit scenario and priority parking)